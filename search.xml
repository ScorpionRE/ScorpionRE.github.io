<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AES</title>
      <link href="/2022/01/23/AES/"/>
      <url>/2022/01/23/AES/</url>
      
        <content type="html"><![CDATA[<h1>AES</h1><h3 id="算法">算法</h3><ul><li><p>输入：128bit</p></li><li><p>输出：128bit</p></li><li><p>密钥长度与迭代轮数有关</p><p><img src="AES.assets/image-20220115160053585.png" alt="image-20220115160053585"></p></li></ul><p>加解密流程：</p><p><img src="AES.assets/aes_details.jpg" alt="img">每一轮主要包括：</p><ul><li>轮密钥加，AddRoundKey：将128位轮密钥Ki同状态矩阵中的数据进行逐位异或操作</li><li>字节替换，SubBytes：查表S盒。把字节的高4位作为行值（0），低4位作为列值（8），取出S盒或者逆S盒中对应的元素（30）作为输出</li><li>行移位，ShiftRows：简单的左循环移位。当密钥长度为128比特时，状态矩阵的第0行左移0字节，第1行左移1字节，第2行左移2字节，第3行左移3字节</li><li>列混淆，MixColumns：经行移位后的状态矩阵与固定的矩阵相乘，得到混淆后的状态矩阵。其中，矩阵元素的乘法和加法都是定义在基于GF(2^8)上的二元运算。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>b</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>其中</mtext><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>03</mn><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>01</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>01</mn><mi>x</mi><mo>+</mo><mn>02</mn><mspace linebreak="newline"></mspace><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>与</mtext><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn><mtext>互素，保证存在逆多项式</mtext><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>，满足</mtext><mi>c</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>。</mtext><mspace linebreak="newline"></mspace><mtext>只有逆多项式</mtext><mi>d</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>存在，才能正确进行解密</mtext></mrow><annotation encoding="application/x-tex">b(x) = a(x)c(x) mod (x^4+1)\\ 其中c(x) = 03x^3+01x^2+01x+02\\ c(x)与x^4+1互素，保证存在逆多项式d(x)，满足c(x)d(x)=1 mod (x^4+1 )。\\只有逆多项式d(x)存在，才能正确进行解密</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">其中</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord">03</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord">01</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">01</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">02</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">与</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">互素，保证存在逆多项式</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">，满足</span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">只有逆多项式</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">存在，才能正确进行解密</span></span></span></span></span></p><p>密钥扩展：</p><ol><li><p>首先将初始密钥输入到一个4*4的状态矩阵，每一列的4个字节组成一个字，依次为w[0],w[1],w[2],w[3]</p></li><li><p>接着，对W数组扩充40个新列，构成总共44列的扩展密钥数组。新列i的产生方式如下</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>i</mi><mtext>不是</mtext><mn>4</mn><mtext>的倍数</mtext><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>4</mn><mo stretchy="false">]</mo><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mi>i</mi><mtext>是</mtext><mn>4</mn><mtext>的倍数</mtext><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo>=</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>4</mn><mo stretchy="false">]</mo><mtext> </mtext><mi>x</mi><mi>o</mi><mi>r</mi><mtext> </mtext><mi>T</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i不是4的倍数\\ w[i] = w[i-4] \ xor\ w[i-1]\\i是4的倍数\\ w[i] = w[i-4]\ xor \ T(w[i-1])</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">不是</span><span class="mord">4</span><span class="mord cjk_fallback">的倍数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">]</span><span class="mspace"> </span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">i</span><span class="mord cjk_fallback">是</span><span class="mord">4</span><span class="mord cjk_fallback">的倍数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">4</span><span class="mclose">]</span><span class="mspace"> </span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">])</span></span></span></span></span></p><p>其中函数T由以下三部分组成：</p><ul><li>字循环：将1个字中的4个字节循环左移1个字节</li><li>字节代换：对字循环的结果使用S盒进行字节代换</li><li>轮常量异或：将前两步的结果与轮常量Rcon[j]异或，其中j表示轮数</li></ul><p><img src="AES.assets/image-20220118145857240.png" alt="image-20220118145857240"></p></li></ol><p>比如上述初始密钥</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>w</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo>:</mo><mn>2</mn><mi>b</mi><mtext> </mtext><mn>7</mn><mi>e</mi><mtext> </mtext><mn>15</mn><mtext> </mtext><mn>16</mn><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo>:</mo><mn>28</mn><mtext> </mtext><mi>a</mi><mi>e</mi><mtext> </mtext><mi>d</mi><mn>2</mn><mtext> </mtext><mi>a</mi><mn>6</mn><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo>:</mo><mi>a</mi><mi>b</mi><mtext> </mtext><mi>f</mi><mn>7</mn><mtext> </mtext><mn>15</mn><mtext> </mtext><mn>88</mn><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo>:</mo><mn>09</mn><mtext> </mtext><mi>c</mi><mi>f</mi><mtext> </mtext><mn>4</mn><mi>f</mi><mtext> </mtext><mn>3</mn><mi>c</mi><mspace linebreak="newline"></mspace><mtext>求扩展的第一轮的子密钥</mtext><mi>w</mi><mo stretchy="false">[</mo><mn>4</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">[</mo><mn>5</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">[</mo><mn>6</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">[</mo><mn>7</mn><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mi>w</mi><mo stretchy="false">[</mo><mn>4</mn><mo stretchy="false">]</mo><mo>=</mo><mi>w</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mi>x</mi><mi>o</mi><mi>r</mi><mi>T</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>T</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">)</mo><mtext>计算过程如下：</mtext><mspace linebreak="newline"></mspace><mn>1.</mn><mi>w</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mtext>循环左移</mtext><mn>1</mn><mtext>个字节得到</mtext><mi>c</mi><mi>f</mi><mtext> </mtext><mn>4</mn><mi>f</mi><mtext> </mtext><mn>3</mn><mi>c</mi><mtext> </mtext><mn>09</mn><mspace linebreak="newline"></mspace><mn>2.</mn><mtext>字节代换得到</mtext><mn>8</mn><mi>a</mi><mtext> </mtext><mn>84</mn><mtext> </mtext><mi>e</mi><mi>b</mi><mtext> </mtext><mn>01</mn><mspace linebreak="newline"></mspace><mn>3.</mn><mtext>与轮常量异或再与</mtext><mi>w</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mtext>异或最后得到</mtext><mi>a</mi><mn>0</mn><mtext> </mtext><mi>f</mi><mi>a</mi><mtext> </mtext><mi>f</mi><mi>e</mi><mtext> </mtext><mn>17</mn></mrow><annotation encoding="application/x-tex">w[0]:2b \ 7e \ 15 \ 16\\ w[1]:28 \ ae \ d2 \ a6\\ w[2]: ab \ f7 \ 15 \ 88\\ w[3]: 09 \ cf \ 4f \ 3c\\求扩展的第一轮的子密钥w[4],w[5],w[6],w[7]\\w[4] = w[0] xor T(w[3])\\ T(w[3])计算过程如下：\\1. w[3]循环左移1个字节得到cf \ 4f \ 3c \ 09\\2.字节代换得到8a \ 84 \ eb \ 01\\3.与轮常量异或再与w[0]异或最后得到a0 \ fa \ fe \ 17</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">2</span><span class="mord mathnormal">b</span><span class="mspace"> </span><span class="mord">7</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mord">15</span><span class="mspace"> </span><span class="mord">16</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">28</span><span class="mspace"> </span><span class="mord mathnormal">a</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mord mathnormal">d</span><span class="mord">2</span><span class="mspace"> </span><span class="mord mathnormal">a</span><span class="mord">6</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ab</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">7</span><span class="mspace"> </span><span class="mord">15</span><span class="mspace"> </span><span class="mord">88</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">09</span><span class="mspace"> </span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord">3</span><span class="mord mathnormal">c</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">求扩展的第一轮的子密钥</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">4</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">5</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">6</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">7</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">4</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">])</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">])</span><span class="mord cjk_fallback">计算过程如下：</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mord cjk_fallback">循环左移</span><span class="mord">1</span><span class="mord cjk_fallback">个字节得到</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace"> </span><span class="mord">3</span><span class="mord mathnormal">c</span><span class="mspace"> </span><span class="mord">09</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">2.</span><span class="mord cjk_fallback">字节代换得到</span><span class="mord">8</span><span class="mord mathnormal">a</span><span class="mspace"> </span><span class="mord">84</span><span class="mspace"> </span><span class="mord mathnormal">e</span><span class="mord mathnormal">b</span><span class="mspace"> </span><span class="mord">01</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3.</span><span class="mord cjk_fallback">与轮常量异或再与</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mord cjk_fallback">异或最后得到</span><span class="mord mathnormal">a</span><span class="mord">0</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">e</span><span class="mspace"> </span><span class="mord">17</span></span></span></span></span></p><h3 id="signature">signature</h3><p>signature定义用到快速软件实现——查表法。将行移位、列混合和S盒结合得到4个4bytes*256项的查找表（T盒）。</p><p>列变换中，</p><p><img src="AES.assets/image-20220118160907434.png" alt="image-20220118160907434"></p><p>将其按列向量拆开，对于每一列，都有：</p><p><img src="AES.assets/image-20220118160943225.png" alt="image-20220118160943225"></p><p>所以得到：其中Wk0为本轮子密钥ki中对应的4字节</p><p><img src="AES.assets/image-20220118161013057.png" alt="image-20220118161013057"></p><p>T盒定义为</p><p><img src="AES.assets/image-20220118161112688.png" alt="image-20220118161112688"></p><p>所以轮操作变为：</p><p><img src="AES.assets/image-20220118161222708.png" alt="image-20220118161222708"></p><p>根据上述理论，预定义的结构如下</p><p><img src="AES.assets/image-20220118151325836.png" alt="image-20220118151325836"></p><p><img src="AES.assets/image-20220118151417023.png" alt="image-20220118151417023"></p><h3 id="测试">测试</h3><p>AES_encrypt</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AES_encrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in, <span class="keyword">unsigned</span> <span class="keyword">char</span> *out,</span></span></span><br><span class="line"><span class="params"><span class="function">                 <span class="keyword">const</span> AES_KEY *key)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> u32 *rk;</span><br><span class="line">    u32 s0, s1, s2, s3, t0, t1, t2, t3;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> FULL_UNROLL</span></span><br><span class="line">    <span class="keyword">int</span> r;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* ?FULL_UNROLL */</span></span></span><br><span class="line"></span><br><span class="line">    assert(in &amp;&amp; out &amp;&amp; key);</span><br><span class="line">    rk = key-&gt;rd_key;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * map byte array block to cipher state</span></span><br><span class="line"><span class="comment">     * and add initial round key:</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    s0 = GETU32(in     ) ^ rk[<span class="number">0</span>];</span><br><span class="line">    s1 = GETU32(in +  <span class="number">4</span>) ^ rk[<span class="number">1</span>];</span><br><span class="line">    s2 = GETU32(in +  <span class="number">8</span>) ^ rk[<span class="number">2</span>];</span><br><span class="line">    s3 = GETU32(in + <span class="number">12</span>) ^ rk[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> FULL_UNROLL</span></span><br><span class="line">    <span class="comment">/* round 1: */</span></span><br><span class="line">    t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[ <span class="number">4</span>];</span><br><span class="line">    t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[ <span class="number">5</span>];</span><br><span class="line">    t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[ <span class="number">6</span>];</span><br><span class="line">    t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[ <span class="number">7</span>];</span><br><span class="line">    <span class="comment">/* round 2: */</span></span><br><span class="line">    s0 = Te0[t0 &gt;&gt; <span class="number">24</span>] ^ Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t3 &amp; <span class="number">0xff</span>] ^ rk[ <span class="number">8</span>];</span><br><span class="line">    s1 = Te0[t1 &gt;&gt; <span class="number">24</span>] ^ Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t0 &amp; <span class="number">0xff</span>] ^ rk[ <span class="number">9</span>];</span><br><span class="line">    s2 = Te0[t2 &gt;&gt; <span class="number">24</span>] ^ Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">10</span>];</span><br><span class="line">    s3 = Te0[t3 &gt;&gt; <span class="number">24</span>] ^ Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">11</span>];</span><br><span class="line">    <span class="comment">/* round 3: */</span></span><br><span class="line">    t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">12</span>];</span><br><span class="line">    t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">13</span>];</span><br><span class="line">    t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">14</span>];</span><br><span class="line">    t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">15</span>];</span><br><span class="line">    <span class="comment">/* round 4: */</span></span><br><span class="line">    s0 = Te0[t0 &gt;&gt; <span class="number">24</span>] ^ Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">16</span>];</span><br><span class="line">    s1 = Te0[t1 &gt;&gt; <span class="number">24</span>] ^ Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">17</span>];</span><br><span class="line">    s2 = Te0[t2 &gt;&gt; <span class="number">24</span>] ^ Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">18</span>];</span><br><span class="line">    s3 = Te0[t3 &gt;&gt; <span class="number">24</span>] ^ Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">19</span>];</span><br><span class="line">    <span class="comment">/* round 5: */</span></span><br><span class="line">    t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">20</span>];</span><br><span class="line">    t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">21</span>];</span><br><span class="line">    t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">22</span>];</span><br><span class="line">    t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">23</span>];</span><br><span class="line">    <span class="comment">/* round 6: */</span></span><br><span class="line">    s0 = Te0[t0 &gt;&gt; <span class="number">24</span>] ^ Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">24</span>];</span><br><span class="line">    s1 = Te0[t1 &gt;&gt; <span class="number">24</span>] ^ Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">25</span>];</span><br><span class="line">    s2 = Te0[t2 &gt;&gt; <span class="number">24</span>] ^ Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">26</span>];</span><br><span class="line">    s3 = Te0[t3 &gt;&gt; <span class="number">24</span>] ^ Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">27</span>];</span><br><span class="line">    <span class="comment">/* round 7: */</span></span><br><span class="line">    t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">28</span>];</span><br><span class="line">    t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">29</span>];</span><br><span class="line">    t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">30</span>];</span><br><span class="line">    t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">31</span>];</span><br><span class="line">    <span class="comment">/* round 8: */</span></span><br><span class="line">    s0 = Te0[t0 &gt;&gt; <span class="number">24</span>] ^ Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">32</span>];</span><br><span class="line">    s1 = Te0[t1 &gt;&gt; <span class="number">24</span>] ^ Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">33</span>];</span><br><span class="line">    s2 = Te0[t2 &gt;&gt; <span class="number">24</span>] ^ Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">34</span>];</span><br><span class="line">    s3 = Te0[t3 &gt;&gt; <span class="number">24</span>] ^ Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">35</span>];</span><br><span class="line">    <span class="comment">/* round 9: */</span></span><br><span class="line">    t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">36</span>];</span><br><span class="line">    t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">37</span>];</span><br><span class="line">    t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">38</span>];</span><br><span class="line">    t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">39</span>];</span><br><span class="line">    <span class="keyword">if</span> (key-&gt;rounds &gt; <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="comment">/* round 10: */</span></span><br><span class="line">        s0 = Te0[t0 &gt;&gt; <span class="number">24</span>] ^ Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">40</span>];</span><br><span class="line">        s1 = Te0[t1 &gt;&gt; <span class="number">24</span>] ^ Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">41</span>];</span><br><span class="line">        s2 = Te0[t2 &gt;&gt; <span class="number">24</span>] ^ Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">42</span>];</span><br><span class="line">        s3 = Te0[t3 &gt;&gt; <span class="number">24</span>] ^ Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">43</span>];</span><br><span class="line">        <span class="comment">/* round 11: */</span></span><br><span class="line">        t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">44</span>];</span><br><span class="line">        t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">45</span>];</span><br><span class="line">        t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">46</span>];</span><br><span class="line">        t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">47</span>];</span><br><span class="line">        <span class="keyword">if</span> (key-&gt;rounds &gt; <span class="number">12</span>) &#123;</span><br><span class="line">            <span class="comment">/* round 12: */</span></span><br><span class="line">            s0 = Te0[t0 &gt;&gt; <span class="number">24</span>] ^ Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">48</span>];</span><br><span class="line">            s1 = Te0[t1 &gt;&gt; <span class="number">24</span>] ^ Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">49</span>];</span><br><span class="line">            s2 = Te0[t2 &gt;&gt; <span class="number">24</span>] ^ Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">50</span>];</span><br><span class="line">            s3 = Te0[t3 &gt;&gt; <span class="number">24</span>] ^ Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[t2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">51</span>];</span><br><span class="line">            <span class="comment">/* round 13: */</span></span><br><span class="line">            t0 = Te0[s0 &gt;&gt; <span class="number">24</span>] ^ Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s3 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">52</span>];</span><br><span class="line">            t1 = Te0[s1 &gt;&gt; <span class="number">24</span>] ^ Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s0 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">53</span>];</span><br><span class="line">            t2 = Te0[s2 &gt;&gt; <span class="number">24</span>] ^ Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s1 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">54</span>];</span><br><span class="line">            t3 = Te0[s3 &gt;&gt; <span class="number">24</span>] ^ Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^ Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^ Te3[s2 &amp; <span class="number">0xff</span>] ^ rk[<span class="number">55</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rk += key-&gt;rounds &lt;&lt; <span class="number">2</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>  <span class="comment">/* !FULL_UNROLL */</span></span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Nr - 1 full rounds:</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    r = key-&gt;rounds &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        t0 =</span><br><span class="line">            Te0[(s0 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(s1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(s2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(s3      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">4</span>];</span><br><span class="line">        t1 =</span><br><span class="line">            Te0[(s1 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(s2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(s3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(s0      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">5</span>];</span><br><span class="line">        t2 =</span><br><span class="line">            Te0[(s2 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(s3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(s0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(s1      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">6</span>];</span><br><span class="line">        t3 =</span><br><span class="line">            Te0[(s3 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(s0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(s1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(s2      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line">        rk += <span class="number">8</span>;</span><br><span class="line">        <span class="keyword">if</span> (--r == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        s0 =</span><br><span class="line">            Te0[(t0 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(t3      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">0</span>];</span><br><span class="line">        s1 =</span><br><span class="line">            Te0[(t1 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(t0      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">1</span>];</span><br><span class="line">        s2 =</span><br><span class="line">            Te0[(t2 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(t1      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">2</span>];</span><br><span class="line">        s3 =</span><br><span class="line">            Te0[(t3 &gt;&gt; <span class="number">24</span>)       ] ^</span><br><span class="line">            Te1[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te2[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            Te3[(t2      ) &amp; <span class="number">0xff</span>] ^</span><br><span class="line">            rk[<span class="number">3</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* ?FULL_UNROLL */</span></span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   * apply last round and</span></span><br><span class="line"><span class="comment">      map cipher state to byte array block:</span></span><br><span class="line"><span class="comment">          */</span></span><br><span class="line">         s0 =</span><br><span class="line">     (Te2[(t0 &gt;&gt; <span class="number">24</span>)       ] &amp; <span class="number">0xff000000</span>) ^</span><br><span class="line">     (Te3[(t1 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x00ff0000</span>) ^</span><br><span class="line">     (Te0[(t2 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x0000ff00</span>) ^</span><br><span class="line">     (Te1[(t3      ) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x000000ff</span>) ^</span><br><span class="line">     rk[<span class="number">0</span>];</span><br><span class="line">         PUTU32(out     , s0);</span><br><span class="line">         s1 =</span><br><span class="line">     (Te2[(t1 &gt;&gt; <span class="number">24</span>)       ] &amp; <span class="number">0xff000000</span>) ^</span><br><span class="line">     (Te3[(t2 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x00ff0000</span>) ^</span><br><span class="line">     (Te0[(t3 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x0000ff00</span>) ^</span><br><span class="line">     (Te1[(t0      ) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x000000ff</span>) ^</span><br><span class="line">     rk[<span class="number">1</span>];</span><br><span class="line">         PUTU32(out +  <span class="number">4</span>, s1);</span><br><span class="line">         s2 =</span><br><span class="line">     (Te2[(t2 &gt;&gt; <span class="number">24</span>)       ] &amp; <span class="number">0xff000000</span>) ^</span><br><span class="line">     (Te3[(t3 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x00ff0000</span>) ^</span><br><span class="line">     (Te0[(t0 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x0000ff00</span>) ^</span><br><span class="line">     (Te1[(t1      ) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x000000ff</span>) ^</span><br><span class="line">     rk[<span class="number">2</span>];</span><br><span class="line">         PUTU32(out +  <span class="number">8</span>, s2);</span><br><span class="line">         s3 =</span><br><span class="line">     (Te2[(t3 &gt;&gt; <span class="number">24</span>)       ] &amp; <span class="number">0xff000000</span>) ^</span><br><span class="line">     (Te3[(t0 &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x00ff0000</span>) ^</span><br><span class="line">     (Te0[(t1 &gt;&gt;  <span class="number">8</span>) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x0000ff00</span>) ^</span><br><span class="line">     (Te1[(t2      ) &amp; <span class="number">0xff</span>] &amp; <span class="number">0x000000ff</span>) ^</span><br><span class="line">     rk[<span class="number">3</span>];</span><br><span class="line">         PUTU32(out + <span class="number">12</span>, s3);</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>可以从图中很明显看出符合signature的特征</p><p><img src="AES.assets/image-20220118172332974.png" alt="image-20220118172332974"></p><h2 id=""></h2>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello</title>
      <link href="/2022/01/23/helloworld/"/>
      <url>/2022/01/23/helloworld/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h1><p>this is </p>]]></content>
      
      
      <categories>
          
          <category> talks </category>
          
          <category> whatever </category>
          
      </categories>
      
      
        <tags>
            
            <tag> talks </tag>
            
            <tag> whatever </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/23/hello-world/"/>
      <url>/2022/01/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DES</title>
      <link href="/2021/01/14/DES/"/>
      <url>/2021/01/14/DES/</url>
      
        <content type="html"><![CDATA[<h1>DES</h1><h3 id="算法原理">算法原理</h3><ul><li><p>输入 64 位。</p></li><li><p>输出 64 位。</p></li><li><p>密钥长64位，密钥事实上是56位参与DES运算（第8、16、24、32、40、48、56、64位是校验位， 使得每个密钥都有奇数个1）</p></li></ul><p>算法流程图如下：</p><p><img src="DES.assets/image-20220112114938574.png" alt="image-20220112114938574"></p><h4 id="密钥生成">密钥生成</h4><ol><li><p>选择置换：不考虑每个字节的第8位，DES的密钥由64位减至56位，每个字节的第8位作为奇偶校验位</p><p><img src="DES.assets/image-20220112132946201.png" alt="image-20220112132946201"></p></li><li><p>循环移位：根据轮数，将两部分分别循环左移1位或2位。</p><p><img src="DES.assets/image-20220112133041770.png" alt="image-20220112133041770"></p></li><li><p>置换：移位后，从56位中选出48位</p><p><img src="DES.assets/image-20220112133518482.png" alt="image-20220112133518482"></p></li></ol><h4 id="加密">加密</h4><ol><li>IP置换：将输入的64位数据块按位重新组合，并把输出分为L0、R0两部分，每部分各长32位。比如以下置换规则表，表示此位置的数据在原数据中的位置，即原数据块的第58位放到新数据的第1位</li></ol><p><img src="DES.assets/image-20220112133802349.png" alt="image-20220112133802349"></p><ol start="2"><li><p>Feistel</p><p><img src="DES.assets/image-20220112134612622.png" alt="image-20220112134612622"></p><ul><li><p>E（扩张置换）：将32位的半块R0扩展到48位，其输出包括8个6位的块，每块包含4位对应的输入位，加上两个邻接的块中紧邻的位。然后与子密钥异或。</p><p>目的有两个：生成与密钥相同长度的数据以进行异或运算；提供更长的结果，在后续的替代运算中可以进行压缩</p><p><img src="DES.assets/image-20220112133737845.png" alt="image-20220112133737845"></p></li><li><p>S盒：替代运算。（非线性，提供安全性）每个S盒将6位输入变为4位输出。给定输入后，输出行由外侧 2 位确定，列由内侧的 4 位确定，例如“011011”的输入的外侧位为“01”，内侧位为“1101”，而每张表的第一行为“00”，第一列为“0000”，输出S盒的第2行，第14列</p><table><thead><tr><th></th><th>x0000x</th><th>x0001x</th><th>x0010x</th><th>x0011x</th><th>x0100x</th><th>x0101x</th><th>x0110x</th><th>x0111x</th><th>x1000x</th><th>x1001x</th><th>x1010x</th><th>x1011x</th><th>x1100x</th><th>x1101x</th><th>x1110x</th><th>x1111x</th></tr></thead><tbody><tr><td>0yyyy0</td><td>14</td><td>4</td><td>13</td><td>1</td><td>2</td><td>15</td><td>11</td><td>8</td><td>3</td><td>10</td><td>6</td><td>12</td><td>5</td><td>9</td><td>0</td><td>7</td></tr><tr><td>0yyyy1</td><td>0</td><td>15</td><td>7</td><td>4</td><td>14</td><td>2</td><td>13</td><td>1</td><td>10</td><td>6</td><td>12</td><td>11</td><td>9</td><td>5</td><td>3</td><td>8</td></tr><tr><td>1yyyy0</td><td>4</td><td>1</td><td>14</td><td>8</td><td>13</td><td>6</td><td>2</td><td>11</td><td>15</td><td>12</td><td>9</td><td>7</td><td>3</td><td>10</td><td>5</td><td>0</td></tr><tr><td>1yyyy1</td><td>15</td><td>12</td><td>8</td><td>2</td><td>4</td><td>9</td><td>1</td><td>7</td><td>5</td><td>11</td><td>3</td><td>14</td><td>10</td><td>0</td><td>6</td><td>13</td></tr></tbody></table></li><li><p>P置换：将32位的半块数据重新排列</p><p><img src="DES.assets/image-20220112134549104.png" alt="image-20220112134549104"></p></li></ul></li><li><p>FP置换（IP置换的逆过程）</p><p><img src="DES.assets/image-20220112134705510.png" alt="image-20220112134705510"></p></li></ol><h3 id="signature">signature</h3><p>Feistel网络结构</p><p><img src="DES.assets/image-20220113142045280.png" alt="image-20220113142045280"></p><p>适用的加密算法</p><p><img src="DES.assets/image-20220112135218512.png" alt="image-20220112135218512"></p><p>DSL描述</p><p><img src="DES.assets/image-20220112135026479.png" alt="image-20220112135026479"></p><h3 id="效果">效果</h3><p>libcrypto.so.1.1(openssl)</p><p><img src="DES.assets/image-20220112165741033.png" alt="image-20220112165741033"></p><p>openssl中查看源代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//des_local.h</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> D_ENCRYPT(LL,R,S) &#123; \</span></span><br><span class="line"><span class="meta">        LOAD_DATA_tmp(R,S,u,t,E0,E1); \</span></span><br><span class="line"><span class="meta">        t=ROTATE(t,4); \</span></span><br><span class="line"><span class="meta">        LL^= \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[0][(u&gt;&gt; 2L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[2][(u&gt;&gt;10L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[4][(u&gt;&gt;18L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[6][(u&gt;&gt;26L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[1][(t&gt;&gt; 2L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[3][(t&gt;&gt;10L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[5][(t&gt;&gt;18L)&amp;0x3f]^ \</span></span><br><span class="line"><span class="meta">            DES_SPtrans[7][(t&gt;&gt;26L)&amp;0x3f]; &#125;</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//des_enc.c</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DES_encrypt2</span><span class="params">(DES_LONG *data, DES_key_schedule *ks, <span class="keyword">int</span> enc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> DES_LONG l, r, t, u;</span><br><span class="line">    <span class="keyword">register</span> DES_LONG *s;</span><br><span class="line"></span><br><span class="line">    r = data[<span class="number">0</span>];</span><br><span class="line">    l = data[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Things have been modified so that the initial rotate is done outside</span></span><br><span class="line"><span class="comment">     * the loop.  This required the DES_SPtrans values in sp.h to be rotated</span></span><br><span class="line"><span class="comment">     * 1 bit to the right. One perl script later and things have a 5% speed</span></span><br><span class="line"><span class="comment">     * up on a sparc2. Thanks to Richard Outerbridge for pointing this out.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">/* clear the top bits on machines with 8byte longs */</span></span><br><span class="line">    r = ROTATE(r, <span class="number">29</span>) &amp; <span class="number">0xffffffff</span>L;</span><br><span class="line">    l = ROTATE(l, <span class="number">29</span>) &amp; <span class="number">0xffffffff</span>L;</span><br><span class="line"></span><br><span class="line">    s = ks-&gt;ks-&gt;deslong;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * I don&#x27;t know if it is worth the effort of loop unrolling the inner</span></span><br><span class="line"><span class="comment">     * loop</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">if</span> (enc) &#123;</span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">0</span>);     <span class="comment">/* 1 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">2</span>);     <span class="comment">/* 2 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">4</span>);     <span class="comment">/* 3 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">6</span>);     <span class="comment">/* 4 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">8</span>);     <span class="comment">/* 5 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">10</span>);    <span class="comment">/* 6 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">12</span>);    <span class="comment">/* 7 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">14</span>);    <span class="comment">/* 8 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">16</span>);    <span class="comment">/* 9 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">18</span>);    <span class="comment">/* 10 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">20</span>);    <span class="comment">/* 11 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">22</span>);    <span class="comment">/* 12 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">24</span>);    <span class="comment">/* 13 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">26</span>);    <span class="comment">/* 14 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">28</span>);    <span class="comment">/* 15 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">30</span>);    <span class="comment">/* 16 */</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">30</span>);    <span class="comment">/* 16 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">28</span>);    <span class="comment">/* 15 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">26</span>);    <span class="comment">/* 14 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">24</span>);    <span class="comment">/* 13 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">22</span>);    <span class="comment">/* 12 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">20</span>);    <span class="comment">/* 11 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">18</span>);    <span class="comment">/* 10 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">16</span>);    <span class="comment">/* 9 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">14</span>);    <span class="comment">/* 8 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">12</span>);    <span class="comment">/* 7 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">10</span>);    <span class="comment">/* 6 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">8</span>);     <span class="comment">/* 5 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">6</span>);     <span class="comment">/* 4 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">4</span>);     <span class="comment">/* 3 */</span></span><br><span class="line">        D_ENCRYPT(l, r, <span class="number">2</span>);     <span class="comment">/* 2 */</span></span><br><span class="line">        D_ENCRYPT(r, l, <span class="number">0</span>);     <span class="comment">/* 1 */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* rotate and clear the top bits on machines with 8byte longs */</span></span><br><span class="line">    data[<span class="number">0</span>] = ROTATE(l, <span class="number">3</span>) &amp; <span class="number">0xffffffff</span>L;</span><br><span class="line">    data[<span class="number">1</span>] = ROTATE(r, <span class="number">3</span>) &amp; <span class="number">0xffffffff</span>L;</span><br><span class="line">    l = r = t = u = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DES_encrypt3</span><span class="params">(DES_LONG *data, DES_key_schedule *ks1,</span></span></span><br><span class="line"><span class="params"><span class="function">                  DES_key_schedule *ks2, DES_key_schedule *ks3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> DES_LONG l, r;</span><br><span class="line"></span><br><span class="line">    l = data[<span class="number">0</span>];</span><br><span class="line">    r = data[<span class="number">1</span>];</span><br><span class="line">    IP(l, r);</span><br><span class="line">    data[<span class="number">0</span>] = l;</span><br><span class="line">    data[<span class="number">1</span>] = r;</span><br><span class="line">    DES_encrypt2((DES_LONG *)data, ks1, DES_ENCRYPT);</span><br><span class="line">    DES_encrypt2((DES_LONG *)data, ks2, DES_DECRYPT);</span><br><span class="line">    DES_encrypt2((DES_LONG *)data, ks3, DES_ENCRYPT);</span><br><span class="line">    l = data[<span class="number">0</span>];</span><br><span class="line">    r = data[<span class="number">1</span>];</span><br><span class="line">    FP(r, l);</span><br><span class="line">    data[<span class="number">0</span>] = l;</span><br><span class="line">    data[<span class="number">1</span>] = r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DES_ede3_cbc_encrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *input, <span class="keyword">unsigned</span> <span class="keyword">char</span> *output,</span></span></span><br><span class="line"><span class="params"><span class="function">                          <span class="keyword">long</span> length, DES_key_schedule *ks1,</span></span></span><br><span class="line"><span class="params"><span class="function">                          DES_key_schedule *ks2, DES_key_schedule *ks3,</span></span></span><br><span class="line"><span class="params"><span class="function">                          DES_cblock *ivec, <span class="keyword">int</span> enc)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">register</span> DES_LONG tin0, tin1;</span><br><span class="line">    <span class="keyword">register</span> DES_LONG tout0, tout1, xor0, xor1;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *in;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *out;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">long</span> l = length;</span><br><span class="line">    DES_LONG tin[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> *iv;</span><br><span class="line"></span><br><span class="line">    in = input;</span><br><span class="line">    out = output;</span><br><span class="line">    iv = &amp;(*ivec)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (enc) &#123;</span><br><span class="line">        c2l(iv, tout0);</span><br><span class="line">        c2l(iv, tout1);</span><br><span class="line">        <span class="keyword">for</span> (l -= <span class="number">8</span>; l &gt;= <span class="number">0</span>; l -= <span class="number">8</span>) &#123;</span><br><span class="line">            c2l(in, tin0);</span><br><span class="line">            c2l(in, tin1);</span><br><span class="line">            tin0 ^= tout0;</span><br><span class="line">            tin1 ^= tout1;</span><br><span class="line"></span><br><span class="line">            tin[<span class="number">0</span>] = tin0;</span><br><span class="line">            tin[<span class="number">1</span>] = tin1;</span><br><span class="line">            DES_encrypt3((DES_LONG *)tin, ks1, ks2, ks3);</span><br><span class="line">            tout0 = tin[<span class="number">0</span>];</span><br><span class="line">            tout1 = tin[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            l2c(tout0, out);</span><br><span class="line">            l2c(tout1, out);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l != <span class="number">-8</span>) &#123;</span><br><span class="line">            c2ln(in, tin0, tin1, l + <span class="number">8</span>);</span><br><span class="line">            tin0 ^= tout0;</span><br><span class="line">            tin1 ^= tout1;</span><br><span class="line"></span><br><span class="line">            tin[<span class="number">0</span>] = tin0;</span><br><span class="line">            tin[<span class="number">1</span>] = tin1;</span><br><span class="line">            DES_encrypt3((DES_LONG *)tin, ks1, ks2, ks3);</span><br><span class="line">            tout0 = tin[<span class="number">0</span>];</span><br><span class="line">            tout1 = tin[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            l2c(tout0, out);</span><br><span class="line">            l2c(tout1, out);</span><br><span class="line">        &#125;</span><br><span class="line">        iv = &amp;(*ivec)[<span class="number">0</span>];</span><br><span class="line">        l2c(tout0, iv);</span><br><span class="line">        l2c(tout1, iv);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">register</span> DES_LONG t0, t1;</span><br><span class="line"></span><br><span class="line">        c2l(iv, xor0);</span><br><span class="line">        c2l(iv, xor1);</span><br><span class="line">        <span class="keyword">for</span> (l -= <span class="number">8</span>; l &gt;= <span class="number">0</span>; l -= <span class="number">8</span>) &#123;</span><br><span class="line">            c2l(in, tin0);</span><br><span class="line">            c2l(in, tin1);</span><br><span class="line"></span><br><span class="line">            t0 = tin0;</span><br><span class="line">            t1 = tin1;</span><br><span class="line"></span><br><span class="line">            tin[<span class="number">0</span>] = tin0;</span><br><span class="line">            tin[<span class="number">1</span>] = tin1;</span><br><span class="line">            DES_decrypt3((DES_LONG *)tin, ks1, ks2, ks3);</span><br><span class="line">            tout0 = tin[<span class="number">0</span>];</span><br><span class="line">            tout1 = tin[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            tout0 ^= xor0;</span><br><span class="line">            tout1 ^= xor1;</span><br><span class="line">            l2c(tout0, out);</span><br><span class="line">            l2c(tout1, out);</span><br><span class="line">            xor0 = t0;</span><br><span class="line">            xor1 = t1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l != <span class="number">-8</span>) &#123;</span><br><span class="line">            c2l(in, tin0);</span><br><span class="line">            c2l(in, tin1);</span><br><span class="line"></span><br><span class="line">            t0 = tin0;</span><br><span class="line">            t1 = tin1;</span><br><span class="line"></span><br><span class="line">            tin[<span class="number">0</span>] = tin0;</span><br><span class="line">            tin[<span class="number">1</span>] = tin1;</span><br><span class="line">            DES_decrypt3((DES_LONG *)tin, ks1, ks2, ks3);</span><br><span class="line">            tout0 = tin[<span class="number">0</span>];</span><br><span class="line">            tout1 = tin[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">            tout0 ^= xor0;</span><br><span class="line">            tout1 ^= xor1;</span><br><span class="line">            l2cn(tout0, tout1, out, l + <span class="number">8</span>);</span><br><span class="line">            xor0 = t0;</span><br><span class="line">            xor1 = t1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        iv = &amp;(*ivec)[<span class="number">0</span>];</span><br><span class="line">        l2c(xor0, iv);</span><br><span class="line">        l2c(xor1, iv);</span><br><span class="line">    &#125;</span><br><span class="line">    tin0 = tin1 = tout0 = tout1 = xor0 = xor1 = <span class="number">0</span>;</span><br><span class="line">    tin[<span class="number">0</span>] = tin[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span>                          <span class="comment">/* DES_DEFAULT_OPTIONS */</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该图匹配到了feistel VARIANT B,根据常量看好像是encrypt3中的最后一部分，感觉不太明白子图和具体代码构建出来的图<img src="DES.assets/image-20220113124310851.png" alt="image-20220113124310851"></p><p>新的代码</p><p><img src="DES.assets/image-20220113141131473.png" alt="image-20220113141131473"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">uint64_t</span> <span class="title">raw_des</span><span class="params">(<span class="keyword">uint64_t</span> text, <span class="keyword">uint64_t</span> key, <span class="keyword">uint8_t</span> mode)</span></span>&#123;</span><br><span class="line">    <span class="keyword">uint64_t</span>* subkeys = (<span class="keyword">uint64_t</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">uint64_t</span>)*<span class="number">16</span>);</span><br><span class="line">    generateSubkeys(key, subkeys);</span><br><span class="line">    <span class="keyword">uint32_t</span> L = <span class="number">0</span>, R = <span class="number">0</span>, SR = <span class="number">0</span>, PR = <span class="number">0</span>, tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">uint64_t</span> ER = <span class="number">0</span>, output = <span class="number">0</span>, subkey = <span class="number">0</span>;</span><br><span class="line">    text = ip(text);</span><br><span class="line">    L = (text &gt;&gt; <span class="number">32</span>) &amp; <span class="number">0x00000000ffffffff</span>;</span><br><span class="line">    R = text &amp; <span class="number">0x00000000ffffffff</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i ++)&#123;</span><br><span class="line">        ER = extend(R);</span><br><span class="line">        subkey = (mode == <span class="number">0</span>) ? subkeys[i] : subkeys[<span class="number">15</span>-i];</span><br><span class="line">        ER = ER ^ subkey;</span><br><span class="line">        SR = s(ER);</span><br><span class="line">        PR = p(SR);</span><br><span class="line">        tmp = R;</span><br><span class="line">        R = L ^ PR;</span><br><span class="line">        L = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(subkeys);</span><br><span class="line">    output = inv_ip(((<span class="keyword">uint64_t</span>)(R) &lt;&lt; <span class="number">32</span> ) | (<span class="keyword">uint64_t</span>)(L));</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">uint64_t</span> <span class="title">des_ede2</span><span class="params">(<span class="keyword">uint64_t</span> text, <span class="keyword">uint64_t</span> key1, <span class="keyword">uint64_t</span> key2, <span class="keyword">uint8_t</span> mode)</span></span>&#123;</span><br><span class="line">    <span class="keyword">uint64_t</span> result;</span><br><span class="line">    result = (mode == <span class="number">0</span>) ? raw_des(text, key1, <span class="number">0</span>) : raw_des(text, key1, <span class="number">1</span>);</span><br><span class="line">    result = (mode == <span class="number">0</span>) ? raw_des(result, key2, <span class="number">1</span>) : raw_des(result, key2, <span class="number">0</span>);</span><br><span class="line">    result = (mode == <span class="number">0</span>) ? raw_des(result, key1, <span class="number">0</span>) : raw_des(result, key1, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个的图结构看起来就更清晰，符合feistel网络结构，也符合定义的signature的VARIANT C</p><p><img src="DES.assets/image-20220113141442031.png" alt="image-20220113141442031"></p><p>每轮加密</p><p><img src="DES.assets/image-20220113142202479.png" alt="image-20220113142202479"></p><p><img src="DES.assets/image-20220113142344671.png" alt="image-20220113142344671"></p><p><code>发现好像有的函数会代入图中，有的不会（都是BL调用函数）</code></p>]]></content>
      
      
      <categories>
          
          <category> crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> crypto </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
